name: Tests and publish

on:
  push:
    branches:
      - 'master'
    tags:
      - '/.*/'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            .ivy2
            .sbt
          key: lama-docker-cache-${{github.ref}}-${{ hashFiles('build.sbt') }}
          restore-keys: |
            lama-docker-cache-${{github.ref}}-${{ hashFiles('build.sbt') }}
            lama-docker-cache-${{github.ref}}
            lama-docker-cache-
      - name: Run common unit tests
        run: SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt common/test
      - name: Run account manager unit tests
        run: SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt accountManager/test
      - name: Run service unit tests
        run: SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt service/test
      - name: Run bitcoin worker unit tests
        run: SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt bitcoinWorker/test
      - name: Run bitcoin interpreter unit tests
        run: SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt bitcoinInterpreter/test

  it-tests:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: lama
          RABBITMQ_DEFAULT_PASS: serge
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 5s
          --health-timeout 15s
          --health-retries 10
        ports:
          - 5672:5672
      redis:
        image: redis
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          REDIS_DB: 1
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_DB: lama
          POSTGRES_USER: lama
          POSTGRES_PASSWORD: serge
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      POSTGRES_DB: lama
      POSTGRES_USER: lama
      POSTGRES_PASSWORD: serge
      ACCOUNT_MANAGER_JDBC_URL: jdbc:postgresql:test_lama
      BITCOIN_INTERPRETER_JDBC_URL: jdbc:postgresql:test_lama_btc
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            .ivy2
            .sbt
          key: lama-docker-cache-${{github.ref}}-${{ hashFiles('build.sbt') }}
          restore-keys: |
            lama-docker-cache-${{github.ref}}-${{ hashFiles('build.sbt') }}
            lama-docker-cache-${{github.ref}}
            lama-docker-cache-
      - name: Install postgresql-client
        run: sudo apt update && sudo apt install -y postgresql-client
      - name: Create dbs
        run: |
          PGPASSWORD=${POSTGRES_PASSWORD} createdb -h localhost -p 5432 -w -U $POSTGRES_USER lama_btc
          PGPASSWORD=${POSTGRES_PASSWORD} createdb -h localhost -p 5432 -w -U $POSTGRES_USER test_lama
          PGPASSWORD=${POSTGRES_PASSWORD} createdb -h localhost -p 5432 -w -U $POSTGRES_USER test_lama_btc
      - name: Run account manager it tests
        run: SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt accountManager/it:test
      - name: Run bitcoin worker it tests
        run: SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt bitcoinWorker/it:test
      - name: Run bitcoin interpreter it tests
        run: SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt bitcoinInterpreter/it:test

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            .ivy2
            .sbt
          key: lama-docker-cache-${{github.ref}}-${{ hashFiles('build.sbt') }}
          restore-keys: |
            lama-docker-cache-${{github.ref}}-${{ hashFiles('build.sbt') }}
            lama-docker-cache-${{github.ref}}
            lama-docker-cache-
      - name: Build and publish lama images locally
        run: |
          sbt assembly
          sbt docker
      - name: Run dockerized lama components
        run: docker-compose up -d
      - name: Waiting for GRPC servers to be up
        run: |
          apt-get update && apt-get install -y wget
          wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz \
          && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz \
          && rm dockerize-linux-amd64-v0.6.1.tar.gz
          dockerize -wait http://localhost:8080/health -timeout 120s
      - name: Run e2e tests
        run: SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt service/it:test

  docker-publish-account-manager:
    runs-on: ubuntu-latest
    needs: [it-tests, unit-tests, e2e-tests, lint]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Create docker image
        run: |
          SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt accountManager/assembly
          SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt accountManager/docker
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish docker image
        run: docker push docker.pkg.github.com/ledgerhq/lama/lama-account-manager

  docker-publish-service:
    runs-on: ubuntu-latest
    needs: [it-tests, unit-tests, e2e-tests, lint]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Create docker image
        run: |
          SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt service/assembly
          SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt service/docker
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish docker image
        run: docker push docker.pkg.github.com/ledgerhq/lama/lama-service

  docker-publish-bitcoin-worker:
    runs-on: ubuntu-latest
    needs: [it-tests, unit-tests, e2e-tests, lint]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Create docker image
        run: |
          SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt bitcoinWorker/assembly
          SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt bitcoinWorker/docker
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish docker image
        run: docker push docker.pkg.github.com/ledgerhq/lama/lama-bitcoin-worker

  docker-publish-bitcoin-interpreter:
    runs-on: ubuntu-latest
    needs: [it-tests, unit-tests, e2e-tests, lint]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Create docker image
        run: |
          SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt bitcoinInterpreter/assembly
          SBT_OPTS="-Xss512m" sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt bitcoinInterpreter/docker
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish docker image
        run: docker push docker.pkg.github.com/ledgerhq/lama/lama-bitcoin-interpreter
