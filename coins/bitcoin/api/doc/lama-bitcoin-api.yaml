openapi: 3.0.1
info:
  title: Lama Bitcoin API
  description: A collection of endpoints exposed by the Lama Bitcoin API
  version: 0.5.0
servers:
  - url: http://localhost:8080
paths:
  /accounts:
    post:
      summary: Register an account in order to trigger synchronization
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAccountRequest'
      responses:
        200:
          description: Registered account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterAccountResponse'
  /accounts/{accountId}:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
          format: 'uuid'
    get:
      summary: Get an account by id
      operationId: getAccount
      responses:
        200:
          description: Account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountResponse'
        404:
          description: Account not found
    put:
      summary: Update an account
      operationId: updateAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        200:
          description: OK
    delete:
      summary: Unregister an account and delete synchronized data
      operationId: unregisterAccount
      responses:
        200:
          description: OK
  /accounts/{accountId}/resync:
    get:
      summary: Resync account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: 'uuid'
        - name: wipe
          in: query
          description: '(if needed, set to true to wipe and resync from zero)'
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: OK
  /accounts/{accountId}/utxos:
    get:
      summary: Get account utxos
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: 'uuid'
        - name: limit
          in: query
          schema:
            type: number
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          schema:
            type: number
            minimum: 0
            default: 0
        - name: sort
          in: query
          schema:
            type: string
            enum: [ASC, DESC]
            default: ASC
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUtxosResult'
  /accounts/{accountId}/operations:
    get:
      summary: Get account operations
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: 'uuid'
        - name: limit
          in: query
          schema:
            type: number
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          schema:
            type: number
            minimum: 0
            default: 0
        - name: sort
          in: query
          schema:
            type: string
            enum: [ASC, DESC]
            default: ASC
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperationsResult'
  /accounts/{accountId}/balances:
    get:
      summary: Get balances history for an account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: 'uuid'
        - name: start
          in: query
          schema:
            type: string
            format: timestamp
            example: '2020-01-01T00:00:00.000Z'
        - name: end
          in: query
          schema:
            type: string
            format: timestamp
            example: '2020-12-31T23:59:59.000Z'
        - name: interval
          in: query
          schema:
            type: number
            example: 12
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceHistory'
  /accounts/{accountId}/balances/daily:
    get:
      summary: Get daily balances history for an account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: 'uuid'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceHistory'
  /accounts/{accountId}/balances/monthly:
    get:
      summary: Get monthly balances history for an account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: 'uuid'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceHistory'
  /accounts/{accountId}/balances/yearly:
    get:
      summary: Get yearly balances history for an account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: 'uuid'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceHistory'
  /accounts/{accountId}/addresses:
    get:
      summary: Get account observable addresses
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: 'uuid'
        - name: change
          in: query
          schema:
            $ref: '#/components/schemas/ChangeType'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
  /accounts/{accountId}/addresses/fresh:
    get:
      summary: Get account fresh addresses
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: 'uuid'
        - name: change
          in: query
          schema:
            $ref: '#/components/schemas/ChangeType'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
  /accounts/{accountId}/transactions:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
          format: 'uuid'
    post:
      summary: Create a transaction
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        200:
          description: Transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransactionResponse'
  /accounts/{accountId}/transactions/send:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
          format: 'uuid'
    post:
      summary: Send a transaction with signatures for broadcast
      operationId: sendTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTransactionRequest'
      responses:
        200:
          description: Broadcasted transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawTransaction'

components:
  schemas:
    GetAccountResponse:
      required:
        - account_id
        - coin
        - sync_frequency
        - balance
        - utxos
        - received
        - sent
      type: object
      properties:
        account_id:
          type: string
          format: 'uuid'
          example: '013260eb-7624-40d2-8327-97177a69d8f3'
        coin:
          type: string
          enum: [btc, btc_testnet, btc_regtest]
          example: 'btc'
        sync_frequency:
          type: number
          format: seconds
          example: 600
          description: 'How often do we look for new operations (in seconds)'
        last_sync_event:
          $ref: '#/components/schemas/SyncEvent'
        balance:
          type: string
          format: bigint
          example: '2757'
        utxos:
          type: number
          example: 6
        received:
          type: string
          format: bigint
          example: '1628156'
        sent:
          type: string
          format: bigint
          example: '1625399'
        label:
          type: string
          example: 'an example account'
    RegisterWithExtendedPublicKey:
      type: object
      properties:
        extended_public_key:
          type: string
          example: 'tpubDCmWgKi3ZvZr7w7TvZK7cfh9Jpr7VaBmr6QEkhbtPeZXSeW34TunnoP982NCrgCsFBPLvTxS6qyiqBT3EH8KDeXq2mA23CbPfWPMWZ8LwWk'
    RegisterWithChainCode:
      type: object
      properties:
        chain_code:
          type: string
          format: hex
        public_key:
          type: string
          format: hex
        index:
          type: number
          example: 0
    RegisterAccountRequest:
      required:
        - account_key
        - scheme
        - lookahead_size
        - network
        - coin_family
        - coin
      type: object
      properties:
        account_key:
          oneOf:
            - $ref: '#/components/schemas/RegisterWithExtendedPublicKey'
            - $ref: '#/components/schemas/RegisterWithChainCode'
        scheme:
          type: string
          enum: [BIP44, BIP49, BIP84]
          example: 'BIP84'
        lookahead_size:
          type: number
          example: 20
        coin:
          type: string
          enum: [btc, btc_testnet, btc_regtest]
          example: 'btc_testnet'
        label:
          type: string
          example: 'testnet account'
    RegisterAccountResponse:
      type: object
      required:
        - account_id
        - sync_id
        - sync_frequency
      properties:
        account_id:
          type: string
          format: uuid
          example: '013260eb-7624-40d2-8327-97177a69d8f3'
        sync_id:
          type: string
          format: uuid
          example: '013260eb-7624-40d2-8327-97177a69d8f3'
        sync_frequency:
          type: number
          example: 600
    UpdateAccountRequest:
      type: object
      properties:
        sync_frequency:
          type: number
          example: 60
        label:
          type: string
          example: 'new label'
    GetOperationsResult:
      required:
        - truncated
        - operations
        - total
      type: object
      properties:
        truncated:
          type: boolean
          example: false
        operations:
          $ref: '#/components/schemas/Operation'
        total:
          type: number
          example: 1
    CreateTransactionRequest:
      required:
        - coin_selection
        - outputs
        - fee_level
      type: object
      properties:
        coin_selection:
          type: string
          enum: [ 'depth_first', 'optimize_size', 'merge_outputs' ]
          example: 'depth_first'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/OutputRequest'
        fee_level:
          type: string
          enum: [ slow, normal, fast ]
          example: 'normal'
        max_utxos:
          type: number
          format: int32
          example: 200
        custom_fee:
          type: string
          format: bigint
          example: '20000'
    OutputRequest:
      required:
        - address
        - value
      type: object
      properties:
        address:
          type: string
          example: 'tb1qq93nw8lddl6d9trzcmunkw3kufzs0p4hgnu3hl'
        value:
          type: string
          format: bigint
          example: '300000'
    CreateTransactionResponse:
      required:
        - hex
        - hash
        - witness_hash
        - utxos
      properties:
        hex:
          type: string
          example: '010000000168603796bea6c4fdf93fbf62c00b17d5c6ce698315affeb47fd234b5051647180100000000ffffffff02a0860100000000001600140163371fed6ff4d2ac62c6f93b3a36e2450786b773020c00000000001600148afb601974d12ad8d4f2fbc47e8d13448eb76a3f00000000'
        hash:
          type: string
          example: 'c3781a66af971634002de4a4592ea5b62a7569a7d823998d1e27c1fad62837c6'
        witness_hash:
          type: string
          example: 'c3781a66af971634002de4a4592ea5b62a7569a7d823998d1e27c1fad62837c6'
        utxos:
          type: array
          items:
            $ref: '#/components/schemas/Utxo'
    SendTransactionRequest:
      required:
        - raw_transaction
        - signatures
      type: object
      properties:
        raw_transaction:
          $ref: '#/components/schemas/RawTransaction'
        signatures:
          type: array
          items:
            type: string
            format: hex
    RawTransaction:
      type: object
      required:
        - hex
        - hash
        - witness_hash
      properties:
        hex:
          type: string
          format: hex format of the raw tx
          example: '010000000168603796bea6c4fdf93fbf62c00b17d5c6ce698315affeb47fd234b5051647180100000000ffffffff02a0860100000000001600140163371fed6ff4d2ac62c6f93b3a36e2450786b773020c00000000001600148afb601974d12ad8d4f2fbc47e8d13448eb76a3f00000000'
        hash:
          type: string
          example: 'c3781a66af971634002de4a4592ea5b62a7569a7d823998d1e27c1fad62837c6'
        witness_hash:
          type: string
          example: 'c3781a66af971634002de4a4592ea5b62a7569a7d823998d1e27c1fad62837c6'
    Address:
      required:
        - account_address
        - change_type
      type: object
      properties:
        account_address:
          type: string
          example: 'tb1q3takqxt56y4d348jl0z8argngj8tw63lnqwds9'
        change_type:
          $ref: '#/components/schemas/ChangeType'
        derivation:
          $ref: '#/components/schemas/Derivation'
    SyncEvent:
      required:
        - account_id
        - sync_id
        - status
        - time
      type: object
      properties:
        account_id:
          type: string
          format: 'uuid'
          example: '013260eb-7624-40d2-8327-97177a69d8f3'
        sync_id:
          type: string
          format: 'uuid'
          example: '013260eb-7624-40d2-8327-97177a69d8f3'
        status:
          type: string
          enum: [ registered, unregistered, published, synchronized, sync_failed, deleted, delete_failed ]
        cursor:
          type: object
          example:
            hash: 000000000000003e0848b000c0e25783a8eca43638864909ac2d2d8a724f183f
            time: '2020-12-08T14:05:55Z'
            height: 1896649
        error:
          type: object
          example:
        time:
          type: string
          example: '2021-01-05T10:15:35.067Z'
    Operation:
      required:
        - uid
        - accountId
        - hash
        - operation_type
        - value
        - fees
        - time
      type: object
      properties:
        uid:
          type: string
          format: hex
          example: "0f839db5e49731cf76e9e3edec3adcbc3ca649087472d4ef321832742ca9cf8f"
        accountId:
          type: string
          format: uuid
        hash:
          type: string
        transaction:
          $ref: '#/components/schemas/Transaction'
        operation_type:
          type: string
          enum: [send, receive]
          example: 'send'
        value:
          type: string
          format: bigint
          example: 302641
        fees:
          type: string
          format: bigint
          example: 2641
        time:
          type: string
          format: timestamp
          example: '2020-12-08T14:05:55Z'
    Transaction:
      required:
        - id
        - hash
        - received_at
        - lock_time
        - fees
        - inputs
        - outputs
        - block
        - confirmations
      type: object
      properties:
        id:
          type: string
          example: '43b83b33ce7678738bc7ae4b99fc5274c1b6e554b8f5832bc2cf4d0afbdf21df'
        hash:
          type: string
          example: '43b83b33ce7678738bc7ae4b99fc5274c1b6e554b8f5832bc2cf4d0afbdf21df'
        received_at:
          type: string
          format: timestamp
          example: '2020-12-08T14:05:55Z'
        lock_time:
          type: number
          format: int64
          example: 0
        fees:
          type: string
          format: bigint
          example: 2641
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Input'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Output'
        block:
          $ref: '#/components/schemas/Block'
        confirmations:
          type: number
          example: 5836
    Block:
      required:
        - hash
        - height
        - time
      properties:
        hash:
          type: string
          example: '000000000000003e0848b000c0e25783a8eca43638864909ac2d2d8a724f183f'
        height:
          type: number
          format: int64
          example: 1896649
        time:
          type: string
          format: timestamp
          example: '2020-12-08T14:05:55Z'
    Input:
      required:
        - output_hash
        - output_index
        - inputIndex
        - value
        - address
        - script_signature
        - txinwitness
        - sequence
        - belongs
      type: object
      properties:
        output_hash:
          type: string
          example: '1b36e538120a0ee5b5997243123e4d45332832a3767ef114a91eb4993fe13d42'
        output_index:
          type: number
          example: 1
        input_index:
          type: number
          example: 0
        value:
          type: string
          format: bigint
          example: 987359
        address:
          type: string
          example: 'tb1qrapaq3jhc7peu3my0hkj4zkhmxvacmhj3g9ady'
        script_signature:
          type: string
        txinwitness:
          type: array
          items:
            type: string
          example: ['3044022069cdb79bf7fdfe03deec158a4ebb3958b91b782f2d34cc32af064ad97e79413002201e4ce2af1f8fadd315d0dc083262c0574bbaa1294f339f06d674cdabf40e5ebc01']
        sequence:
          type: number
          format: int64
          example: '4294967295'
        derivation:
          $ref: '#/components/schemas/Derivation'
    Output:
      required:
        - output_index
        - value
        - address
        - script_hex
        - belongs
      type: object
      properties:
        output_index:
          type: number
          example: 0
        value:
          type: string
          format: bigint
          example: 300000
        address:
          type: string
          example: 'tb1qf8xlchz5ynxzg38dzsjkddug6uyhgqsmtxffxk'
        script_hex:
          type: string
          example: '001449cdfc5c5424cc2444ed142566b788d70974021b'
        change_type:
          $ref: '#/components/schemas/ChangeType'
        derivation:
          $ref: '#/components/schemas/Derivation'
    ChangeType:
      type: string
      enum: [internal, external]
    Derivation:
      type: array
      items:
        type: number
      example: [1, 2]
    GetUtxosResult:
      required:
        - truncated
        - utxos
        - total
      type: object
      properties:
        truncated:
          type: boolean
          example: false
        utxos:
          $ref: '#/components/schemas/Utxo'
        total:
          type: number
          example: 1
    Utxo:
      required:
        - transaction_hash
        - output_index
        - value
        - address
        - script_hex
        - derivation
        - time
      type: object
      properties:
        transaction_hash:
          type: string
          example: '18471605b534d27fb4feaf158369cec6d5170bc062bf3ff9fdc4a6be96376068'
        output_index:
          type: number
          example: 1
        value:
          type: string
          format: bigint
          example: '897359'
        address:
          type: string
          example: 'tb1qv8v7s8q7rf0h2raa3w94v4tlh6t2qrjfwffsfl'
        script_hex:
          type: string
          example: '001461d9e81c1e1a5f750fbd8b8b56557fbe96a00e49'
        derivation:
          $ref: '#/components/schemas/Derivation'
        change_type:
          $ref: '#/components/schemas/ChangeType'
        time:
          type: string
          format: timestamp
          example: '2020-12-04T15:29:30Z'
    BalanceHistory:
      required:
        - balance
        - block_height
        - time
      type: object
      properties:
        balance:
          type: string
          format: bigint
          example: '59738587'
        block_height:
          type: number
          format: int64
          example: 1896649
        time:
          type: string
          format: timestamp
          example: '2020-12-08T14:05:55Z'
